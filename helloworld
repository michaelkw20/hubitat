definition(
    name: "Turn On/Off Switches with Temperature",
    namespace: "yournamespace",
    author: "Michael Keep",
    description: "Turn on/off switches based on temperature",
    category: "My Apps",
    iconUrl: "",
    iconX2Url: "",
    iconX3Url: ""
)

//variable to keep track of the fan speed mode
def fanSpeed = "low" //this is the inital fan speed 

preferences {
    section("Switch Settings") {
        input "triggerSwitch", "capability.switch", title: "Select Trigger Switch", required: true
        input "switch1", "capability.switch", title: "Select Switch 1", required: true
        input "switch2", "capability.switch", title: "Select Switch 2", required: true
        input "switch3", "capability.switch", title: "Select Switch 3", required: true
    }
    section("Temperature Settings") {
        input "thermostat", "capability.thermostat", title: "Select Thermostat", required: true
    }
}

def installed() {
    subscribe(triggerSwitch, "switch.on", triggerSwitchHandler)
    subscribe(triggerSwitch, "switch.off", triggerSwitchHandler)
    subscribe(thermostat, "temperature", temperatureHandler) // Subscribe to temperature updates
    updateLoggingLevel(4) // Set logging level to 4 (debug)
    log.info("Turn On/Off Switches with Temperature app installed. Logging enabled.")
}

def updated() {
    unsubscribe()
    subscribe(triggerSwitch, "switch.on", triggerSwitchHandler)
    subscribe(triggerSwitch, "switch.off", triggerSwitchHandler)
    subscribe(thermostat, "temperature", temperatureHandler) // Subscribe to temperature updates
}

def updateLoggingLevel(level) {
    state.loggingLevel = level.toString()
    log.info("Logging level set to ${level}")
}

def triggerSwitchHandler(evt) {
    if (evt.value == "on") {
        if (isTemperatureAboveThreshold(8)) {
            log.info("High cool activated, pump required")
            runIn(2, turnOnSwitch1)
            log.info("Requesting fan to start on high speed in 1 minute")
            runIn(10, turnOnSwitch3)
            
        } else if (isTemperatureAboveThreshold(2)) {
            log.info("Low cool activated, pump required")
            runIn(2, turnOnSwitch1)
            log.info("requesting fan to start on low mode in 1 minute")
            runIn(10, turnOnSwitch2)

        }   else if (isTemperatureBelowThreshold(2)) {
            log.info("Temperature is near setpoint, running fan only")
            runIn(2, turnOnSwitch2)
        }  
        else {
            runIn(15, turnOnSwitch1)
        }
    } else {
        switch1.off()
        switch2.off()
        switch3.off()
        log.info("Turning switch 1, 2, and 3 off")
    }
}

def turnOnSwitch1() {
    def currentTemperature = thermostat.currentValue("temperature")
    def coolingSetpoint = thermostat.currentValue("coolingSetpoint")
    def temperatureThreshold1 = coolingSetpoint + 2
    def temperatureThreshold2 = coolingSetpoint + 8

    if (currentTemperature > temperatureThreshold2) {
        switch1.on()
        log.info("Turning on pump (Wetting pads)")
    } else if (currentTemperature > temperatureThreshold1) {
        switch1.on()
        log.info("Turning on pump (Wetting pads)")
    } else {
        switch1.off()
        log.info("Turning off pump (No need for pump)")
    }
}

def turnOnSwitch2() {
    switch2.on()
    log.info("Turning on Switch 2: Starting fan in lo mode")
}

def turnOnSwitch3() {
     if (isTemperatureAboveThreshold(8)) {
        switch3.on()
        log.info("Turning on Switch 3: Turning on high-speed fan")
        fanSpeed = "high" // Update fan speed to high when temperature threshold is met
    } else {
        switch3.off()
        log.info("Turning off Switch 3: Turning off high-speed fan")
        fanSpeed = "low" // Update fan speed to low when temperature threshold is not met
    }
}

def adjustFanSpeed() {
    def currentTemperature = thermostat.currentValue("temperature")
    def coolingSetpoint = thermostat.currentValue("coolingSetpoint")
    def temperatureThreshold1 = coolingSetpoint + 2
    
    if (currentTemperature > temperatureThreshold2) {
        // Set fan speed to high
        if (fanSpeed != "high") {
            fanSpeed = "high"
            // Code to activate high-speed fan
            log.info("Switching to high-speed fan mode")
        }
    } else if (currentTemperature > temperatureThreshold1) {
        // Set fan speed to low
        if (fanSpeed != "low") {
            fanSpeed = "low"
            // Code to activate low-speed fan
            log.info("Switching to low-speed fan mode")
        }
    } else {
        // Turn off the fan (if needed)
        if (fanSpeed != "off") {
            fanSpeed = "off"
            // Code to turn off the fan
            log.info("Turning off the fan")
        }
    }
}

//Temp below 8 degrees above set point
def isTemperatureBelowThreshold(threshold) {
    def currentTemperature = thermostat.currentValue("temperature")
    def coolingSetpoint = thermostat.currentValue("coolingSetpoint")
    def temperatureThreshold = coolingSetpoint + threshold
    return currentTemperature < temperatureThreshold
}

//Temp above 8 degrees above the set point
def isTemperatureAboveThreshold(threshold) {
    def currentTemperature = thermostat.currentValue("temperature")
    def coolingSetpoint = thermostat.currentValue("coolingSetpoint")
    def temperatureThreshold = coolingSetpoint + threshold
    return currentTemperature > temperatureThreshold
}

def temperatureHandler(evt) {
    // This handler will be called when the thermostat reports a temperature change
    // You can add any temperature-related logic here if needed
    log.info("Temperature updated to ${evt.value}")
    // Here I am adjusting fan speed based on the temperature
    adjustFanSpeed()
}
